name: Build nightly APK

env:
  BUILD_FLAVOR: foss
  BUILD_TYPE: nightly
  BUILD_FLAVOR_TYPE: fossNightly

on:
  workflow_dispatch:
  push:
    tags:
      - "nightly/2[0-9][2-9][4-9][0-1][0-2][0-3][0-9][0-9][0-9]"
    paths-ignore:
      - "*.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install JQ
        run: sudo apt-get install jq -y

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "zulu"
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-        

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "keystore.jks"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew assembleFossNightly
        env:
          GITHUB_WORKFLOW_RUN_ID: ${{ github.run_id }}
          KEYSTORE_FILE_PATH: ${{ steps.android_keystore.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Get output file path
        id: get_output_file_path
        shell: bash
        run: |
          json_content=$(cat app/build/outputs/apk/$BUILD_FLAVOR/$BUILD_TYPE/output-metadata.json)
          echo "VERSION_CODE=$(echo "$json_content" | jq '.elements[0].versionCode')" >> "$GITHUB_OUTPUT"
          echo "OUTPUT_FILE=$(echo "$json_content" | jq '.elements[0].outputFile')" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: linksheet-nightly
          path: |
            app/build/outputs/apk/${{ env.BUILD_FLAVOR }}/${{ env.BUILD_TYPE }}/"$APK_FILE"
            app/build/outputs/mapping/${{ env.BUILD_FLAVOR_TYPE }}/*.txt
        env:
          APK_FILE: ${{ steps.get_output_file_path.OUTPUT_FILE }}

      - name: Nightly release notes
        id: release_note
        uses: 1fexd/gh-create-release-notes@0.0.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          stable-repo: ${{ github.repository }}
          nightly-repo: ${{ vars.NIGHTLY_REPO_URL }}
          last-commit-sha: ${{ github.event.before }}
          commit-sha: ${{ github.sha }}

      - run: gh release create -R "$NIGHTLY_REPO" -t "$VERSION_CODE" "$NIGHTLY_TAG" "$APK_FILE" --latest --notes "$RELEASE_NOTE"
        env:
          APK_FILE: ${{ steps.get_output_file_path.OUTPUT_FILE }}
          NIGHTLY_TAG: ${{ github.ref }}
          VERSION_CODE: ${{ steps.get_output_file_path.VERSION_CODE }}
          GITHUB_TOKEN: ${{ secrets.NIGHTLY_REPO_ACCESS_TOKEN }}
          NIGHTLY_REPO: ${{ vars.NIGHTLY_REPO_URL }}
          RELEASE_NOTE: ${{ steps.release_note.outputs.releaseNote }}
          BUILD_FLAVOR: ${{ env.BUILD_FLAVOR }}
          BUILD_TYPE: ${{ env.BUILD_TYPE }}

      - name: Trigger a remote workflow
        id: trigger_pro_build
        uses: 1fexd/gh-trigger-remote-action@0.0.4
        with:
          github-token: ${{ secrets.NIGHTLY_REPO_ACCESS_TOKEN }}
          repo: ${{ vars.NIGHTLY_PRO_REPO_URL }}
          ref: ${{ github.ref }}
          event-type: rebuild-nightly
