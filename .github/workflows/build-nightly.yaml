# This file was generated using Kotlin DSL (.github/workflows/build-nightly.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Build nightly APK'
on:
  workflow_dispatch: {}
  push:
    paths-ignore:
    - '*.md'
    tags:
    - 'nightly/2[0-9][2-9][4-9][0-1][0-2][0-3][0-9][0-9][0-9]'
env:
  BUILD_FLAVOR: 'foss'
  BUILD_TYPE: 'nightly'
  BUILD_FLAVOR_TYPE: 'fossNightly'
jobs:
  check_yaml_consistency:
    name: 'Check YAML consistency'
    runs-on: 'ubuntu-latest'
    steps:
    - id: 'step-0'
      name: 'Check out'
      uses: 'actions/checkout@v4'
    - id: 'step-1'
      name: 'Execute script'
      run: 'rm ''.github/workflows/build-nightly.yaml'' && ''.github/workflows/build-nightly.main.kts'''
    - id: 'step-2'
      name: 'Consistency check'
      run: 'git diff --exit-code ''.github/workflows/build-nightly.yaml'''
  build:
    runs-on: 'ubuntu-latest'
    needs:
    - 'check_yaml_consistency'
    steps:
    - id: 'step-0'
      name: 'Install JQ'
      run: 'sudo apt-get install jq -y'
    - id: 'step-1'
      uses: 'actions/checkout@v4'
      with:
        submodules: 'true'
    - id: 'step-2'
      uses: 'actions/setup-java@v4'
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: 'gradle'
    - id: 'step-3'
      uses: 'android-actions/setup-android@v3'
    - id: 'step-4'
      uses: 'timheuer/base64-to-file@v1'
      with:
        fileName: 'keystore.jks'
        encodedString: '${{ secrets.KEYSTORE_FILE }}'
    - id: 'step-5'
      uses: 'gradle/actions/setup-gradle@v3'
    - id: 'step-6'
      name: 'Get output file path'
      env:
        OUTPUT_METADATA_JSON: 'app/build/outputs/apk/${{ env.BUILD_FLAVOR }}/${{ env.BUILD_TYPE }}/output-metadata.json'
      shell: 'bash'
      run: |-
        json_content=$(cat "$OUTPUT_METADATA_JSON")
        echo "VERSION_CODE=$(echo "$json_content" | jq '.elements[0].versionCode')" >> "$GITHUB_OUTPUT"
        echo "OUTPUT_FILE=$(echo "$json_content" | jq '.elements[0].outputFile')" >> "$GITHUB_OUTPUT"
    - id: 'step-7'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'linksheet-nightly'
        path: |-
          app/build/outputs/apk/${{ env.BUILD_FLAVOR }}/${{ env.BUILD_TYPE }}/${{ steps.step-6.outputs.OUTPUT_FILE }}
          app/build/outputs/apk/${{ env.BUILD_FLAVOR_TYPE }}/*.txt
    - id: 'step-8'
      uses: '1fexd/gh-create-release-notes@0.0.9'
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
        stable-repo: '${{ github.repository }}'
        nightly-repo: '${{ vars.NIGHTLY_REPO_URL }}'
        last-commit-sha: '${{ github.event.before }}'
        commit-sha: '${{ github.sha }}'
    - id: 'step-9'
      env:
        APK_FILE: 'app/build/outputs/apk/${{ env.BUILD_FLAVOR }}/${{ env.BUILD_TYPE }}/${{ steps.step-6.outputs.OUTPUT_FILE }}'
        NIGHTLY_TAG: '${{ github.ref }}'
        VERSION_CODE: '${{ steps.step-6.outputs.VERSION_CODE }}'
        GITHUB_TOKEN: '${{ github.token }}'
        NIGHTLY_REPO: '${{ vars.NIGHTLY_REPO_URL }}'
        BUILD_FLAVOR: '${{ env.BUILD_FLAVOR }}'
        BUILD_TYPE: '${{ env.BUILD_TYPE }}'
        RELEASE_NOTE: '${{ steps.step-8.outputs.releaseNote }}'
      run: 'gh release create -R "$NIGHTLY_REPO" -t "$VERSION_CODE" "$NIGHTLY_TAG" "$APK_FILE" --latest --notes "$RELEASE_NOTE"'
